Bitwise {
  Script = Exp*
  
  Exp = DirectiveExp? (StructExp | FieldExp | ArrayFieldExp | comment)
    
  DirectiveExp = "#" directiveToken (hexaddress|offset) ";"
  
  StructExp = "struct" "{" Exp+ "}" fieldName ("[" length "]")? ";"
  
  FieldExp = typeToken FieldDefinitionExp ";"

  FieldDefinitionExp = 
    | FieldMaskDefinitionListExp 
    | fieldName

  FieldMaskDefinitionExp = fieldName ":" length

  FieldMaskDefinitionListExp = (FieldMaskDefinitionExp ",")* FieldMaskDefinitionExp
  
  ArrayFieldExp = typeToken fieldName "[" length "]" ";"
  
  comment =
    | singleLineComment
    | multiLineComment

  multiLineComment = 
    | "/*" multiLineCommentChars? "*/" -- alt1

  multiLineCommentChars = 
    (~"*/" any)*
  
  singleLineComment = 
    | "//" singleLineCommentChars? -- alt1

  singleLineCommentChars = 
    | singleLineCommentChar+

  singleLineCommentChar = 
    | ~lineTerminator any
  
  directiveToken = 
    | "seekto" 
    | "seek" 
    | "printoffset"
    
  hexaddress = "0x" hexdigit+

  offset = digit+

  length = digit+

  hexdigit = digit | "a".."f" | "A".."F"

  fieldName = lower (letter|digit|"_")+
  
  typeToken = 
    | "bit" 
    | "u8" 
    | "u16" 
    | "ul16" 
    | "u24" 
    | "ul24" 
    | "u32" 
    | "ul32" 
    | "i8" 
    | "i16" 
    | "il16" 
    | "i24" 
    | "il24" 
    | "i32" 
    | "il32" 
    | "char" 
    | "lbcd" 
    | "bbcd"
        
  lineTerminator = 
    | "\n"
    | "\r"
    | "\u2028"
    | "\u2029"
}